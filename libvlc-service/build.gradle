apply plugin: 'com.android.library'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'libvlc-service'

    publishedGroupId = 'dk.nota.lyt'
    libraryName = 'LibVLCServiceAndroid'
    artifact = 'libvlc-service'

    libraryDescription = 'A wrapper for LibVLC using a background service'

    siteUrl = 'https://github.com/ddfreiling/libvlc-playback-service'
    gitUrl = 'https://github.com/ddfreiling/libvlc-playback-service.git'

    developerId = 'ddfreiling'
    developerName = 'Daniel Freiling'
    developerEmail = 'dfg@nota.dk'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

    // Update this on new version
    libraryVersionCode = 25
    libraryVersion = '0.8.3'
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode libraryVersionCode
        versionName libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation'junit:junit:4.12'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:support-compat:27.1.1'
    implementation 'com.android.support:support-media-compat:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    api 'de.mrmaffen:libvlc-android:2.1.12@aar'
}

group = publishedGroupId // Maven Group ID for the artifact
version = libraryVersion

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

// BINTRAY

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = false //Determines whether to GPG sign the files. The default is false
                //passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
